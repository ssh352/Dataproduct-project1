trainurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(trainurl, destfile = "machine//project/training.csv")
testurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(testurl, destfile = "machine//project/testing.csv")
training <- read.csv("machine//project/training.csv")
dim(training)
?is.na
testing <- read.csv("machine//project/testing.csv")
dim(training); dim(testing)
ncol(training)
is.na(training[,1])
is.na(training[,16])
sum(is.na(train[,1]))
sum(is.na(training[,1]))
sum(is.na(training[,16]))
sum(is.na(training[,5]))
sum(is.na(training[,6]))
sum(is.na(training[,7]))
str(testing)
sum(is.na(training[,17]))
sum(is.na(training[,18]))
sum(is.na(training[,19]))
sum(is.na(training[,11]))
length(testing[,11])
length(testing[,12])
head(testing[,11])
head(testing[,12])
sum(is.na(training[,12]))
sum(is.na(testing[,12]))
class(training)
a <- c(1:6)
a <- c(a, 7)
a
b <- c(b, 0)
b <- numeric()
b <- c(b, 0)
b
b <- c(b, 9)
b
ncol(training)
tr <- testing[, 1:6]
head(tr)
cleanna <- function(dataset){
n <- ncol(dataset),
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,n])) == 0){
numcol <- c(nacol, n)
}
}
dataset[,cumcol]
cleanna <- function(dataset){
n <- ncol(dataset),
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,n])) == 0){
numcol <- c(nacol, n)
}
}
dataset[,cumcol]
}
cleanna <- function(dataset){
n <- ncol(dataset),
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,n])) == 0){
numcol <- c(nacol, n)
}
}
dataset[,cumcol]
}
cleanna <- function(dataset){
n <- ncol(dataset),
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(nacol, n)
}
}
dataset[,cumcol]
}
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(nacol, n)
}
}
dataset[,cumcol]
}
tr <- cleanna(training)
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, n)
}
}
dataset[,cumcol]
}
tr <- cleanna(training)
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, n)
}
}
dataset[,numcol]
}
tr <- cleanna(training)
dim(tr)
tr <- cleanna(testing)
dim(tr)
dim(tr)
tr
tr-train <- cleanna(training)
trtrain <- cleanna(training)
str(trtrain)
names(trtrain)
names(training)
head(trtrain[,1:6])
tr <- cleanna(testing)
tr
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, n)
}
}
file <- dataset[,numcol]
names(file) <- names(dataset[,numcol])
file
}
tr <- clearnna(testing)
tr <- cleanna(testing)
head(tr[,1:6])
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, n)
}
}
#file <- dataset[,numcol]
#names(file) <- names(dataset[,numcol])
numcol
}
cleanna(test)
cleanna(testing)
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, i)
}
}
dataset[,numcol]
#names(file) <- names(dataset[,numcol])
}
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, i)
}
}
numcol
#dataset[,numcol]
#names(file) <- names(dataset[,numcol])
}
cleanna(testing)
dim(testing)
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (sum(is.na(dataset[,i])) == 0){
numcol <- c(numcol, i)
}
}
dataset[,numcol]
}
tr <- cleanna(training)
dim(tr)
str(tr[,1:10])
str(tr[,1])
str(tr[,93])
names(tr)
head(tr[,6])
head(tr[,1:10])
head(tr[,11:20])
head(tr[,21:30])
head(tr[,31:40])
str(tr[,1:10])
str(tr[,11:20])
str(tr[,1:10])
str(tr[,1:20])
str(tr[,11:20])
str(tr[,21:30])
str(tr[,31:40])
trainurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
download.file(trainurl, destfile = "machine//project/pml-training.csv")
pmltraining <- read.csv("machine//project/pml-training.csv")
testurl <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"
download.file(testurl, destfile = "machine//project/testing.csv")
pmltesting <- read.csv("machine//project/testing.csv")
dim(training); dim(testing)
dim(pmltraining); dim(pmltesting)
cleanna <- function(dataset){
n <- ncol(dataset)
numcol <- numeric()
for(i in 1:n){
if (!any(is.na(dataset[,i]))){
numcol <- c(numcol, i)
}
}
dataset[,numcol]
}
t1 <- cleanna(pmltraining)
dim(t1)
?read.csv
pmltraining <- read.csv("machine//project/pml-training.csv",na.string = "NA")
t1 <- cleanna(pmltraining)
dim(t1)
head(t1[,1:10])
t2 <- nearZeroVar(t1, saveMetrics=T)
library(caret)
t2 <- nearZeroVar(t1, saveMetrics=T)
t2
?sum(t2$nzv == "TRUE")
sum(t2$nzv == "TRUE")
t3 <- t1[, t2$nzv=="FALSE"]
dim(t3)
dim(t1)
head(t3[1:10])
head(t3[11:20])
head(t3[21:30])
head(t3[31:40])
head(t3[41:50])
head(t3[51:60])
head(t3[51:69])
head(t3[51:59])
nonatrain <- cleanna(pmltraining)
nzvtrain <- nearZeroVar(nonatrain, saveMetrics=T)
traindata <- nonatrain[,nzvtrain$nzv=="FALSE"]
dim(traindata)
names(traindata)
?nearZeroVar
getwd()
traindata <- traindata[, -c(1:5)]
dim(traindata)
names(traindata)
set.seed(123)
intrain <- createDataPartition(y=traindata$classe, p=0.75, list = FALSE)
trainsub <- traindata[intrain,]; testsub <- traindata[-intrain,]
dim(trainsub)
dim(testsub)
head(trainsub[,54])
head(testsub[,54])
modFit <- train(
modFit <- train(classe ~ ., data = trainsub, method = "rf", prox = T)
library(ISLR)
data(Wage)
summary(Wage)
summary(Wage)
shiny::runApp('dataproduct/shiny/project')
shiny::runApp('dataproduct/shiny/project')
shiny::runApp('dataproduct/shiny/project')
getwd()
setwd("dataproduct//shiny/project/present/")
publish(user="")
publish(user="USER", repo = "Dataproduct-project")
library(slidify)
publish(user="USER", repo = "Dataproduct-project")
publish(user="USER", repo = "Dataproduct-project2")
publish(title = 'slidify project', 'index.html', host = 'rpubs')
publish(user="yaowangdatas", repo = "git@github.com:yaowangdatas/Dataproduct-project2.git")
publish(title='slidifyproject', 'index.html', host='rpubs')
options(rpubs.upload.method = "internal")
options(RCurlOptions = list(verbose = FALSE, capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
publish(title='slidifyproject', 'index.html', host='rpubs')
library("bitops", lib.loc="~/R/win-library/3.1")
library("RCurl", lib.loc="~/R/win-library/3.1")
publish(title='slidifyproject', 'index.html', host='rpubs')
options(rpubs.upload.method = "internal")
options(RCurlOptions = list(verbose = FALSE, capath = system.file("CurlSSL", "cacert.pem", package = "RCurl"), ssl.verifypeer = FALSE))
publish(title='slidifyproject', 'index.html', host='rpubs')
options(rpubs.upload.method = "internal")
publish(title='slidifyproject', 'index.html', host='rpubs')
